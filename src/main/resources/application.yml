server:
  port: 8081
  servlet:
    context-path: /ty_multiverse_consumer

spring:
  application:
    name: ty_multiverse_consumer
  # 數據庫配置 - PostgreSQL
  config:
    import: classpath:env/@env@.properties
  datasource:
    driver-class-name: org.postgresql.Driver
    url: '@SPRING_DATASOURCE_URL@'
    username: '@SPRING_DATASOURCE_USERNAME@'
    password: '@SPRING_DATASOURCE_PASSWORD@'
    # HikariCP 連接池配置 - 最大2個連接
    hikari:
      maximum-pool-size: 2
      minimum-idle: 0
      connection-timeout: 30000
      idle-timeout: 30000
      max-lifetime: 60000
      leak-detection-threshold: 5000
      connection-test-query: SELECT 1
      validation-timeout: 5000
      register-mbeans: true
      pool-name: HikariPool-1
      auto-commit: true 
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          auto: update
        connection:
          release_mode: after_transaction
        jdbc:
          batch_size: 20
          fetch_size: 20
  rabbitmq:
    enabled: ${RABBITMQ_ENABLED:true}
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST:/}

# 日誌配置
logging:
  level:
    root: @LOGGING_LEVEL@
    org.springframework.web: @LOGGING_LEVEL_SPRINGFRAMEWORK@
    org.springframework.amqp: @LOGGING_LEVEL_SPRINGFRAMEWORK@
    com.vinskao.ty_multiverse_consumer: @LOGGING_LEVEL@

# Actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,rabbit,beans
  endpoint:
    health:
      show-details: always

# Swagger文檔配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  packages-to-scan: com.vinskao.ty_multiverse_consumer
  paths-to-match: /**
